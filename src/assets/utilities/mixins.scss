/* Colors and Backgrounds */
@mixin center($width, $height: 0) {
  position: absolute;
  @if $height != 0{
    left: calc(50% - (#{$width} / 2));
    top: calc(50% - (#{$height} / 2));
  }
  @else{
    left: calc(50% - (#{$width} / 2));
    top: calc(50% - (#{$width} / 2));
  }
}

@mixin color($color, $alpha: 1) {
  color: rgba($color, $alpha);
}

@mixin border($border-color, $alpha: 1) {
  border-color: rgba($border-color, $alpha);
}

@mixin bg($bg-color, $alpha: 1) {
  background-color: rgba($bg-color, $alpha);
}

@mixin bg-color($color, $bg-color) {
  @include color-props($color, $bg-color, false);
}

@mixin color-props($color: false, $bg: false, $border: false) {
  @if $color {
    color: $color;
  }

  @if $bg {
    background-color: $bg;
  }

  @if $border {
    border-color: $border;
  }
}

@mixin background-cover() {
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
}

@mixin linear-gradient($direction, $color-stops...) {
  @if is-direction($direction) == false {
    $color-stops: ($direction, $color-stops);
    $direction: 180deg;
  }

  background: nth(nth($color-stops, 1), 1);
  background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
  background: linear-gradient($direction, $color-stops);
}

@mixin radial-gradient($innerColor, $outerColor)  {
  background-color: $outerColor;
  background-image: -webkit-gradient(radial, center center, 0, center center, 460, from($innerColor), to($outerColor));
  background-image: -webkit-radial-gradient(circle, $innerColor, $outerColor);
  background-image: -moz-radial-gradient(circle, $innerColor, $outerColor);
  background-image: -o-radial-gradient(circle, $innerColor, $outerColor);
  background-image: -ms-radial-gradient(circle, $innerColor, $outerColor);
  background-image: radial-gradient(circle, $innerColor, $outerColor);
  background-repeat: no-repeat;
}

/* Dimension and offset */
@mixin dimensions($width: false, $height: false) {
  @if $width {
    width: $width;
  }

  @if $height {
    height: $height;
  }
}


@mixin margin-padding($margin: false, $padding: false) {
  @if $margin {
    margin: $margin;
  }

  @if $padding {
    padding: $padding;
  }
}

@mixin unselectable {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}


@mixin delete-btn {
  @include unselectable;
  -moz-appearance: none;
  -webkit-appearance: none;
  background-color: rgba($black, 0.2);
  border: none;
  border-radius: $radius-rounded;
  cursor: pointer;
  pointer-events: auto;
  display: inline-block;
  flex-grow: 0;
  flex-shrink: 0;
  font-size: 0;
  height: 20px;
  max-height: 20px;
  max-width: 20px;
  min-height: 20px;
  min-width: 20px;
  outline: none;
  position: relative;
  vertical-align: top;
  width: 20px;
  &::before,
  &::after {
    background-color: $white;
    content: "";
    display: block;
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translateX(-50%) translateY(-50%) rotate(45deg);
    transform-origin: center center;
  }
  &::before {
    height: 2px;
    width: 50%;
  }
  &::after {
    height: 50%;
    width: 2px;
  }
  &:hover,
  &:focus {
    background-color: rgba($black, 0.3);
  }
  &:active {
    background-color: rgba($black, 0.4);
  }
  // Sizes
  &.is-small {
    height: 16px;
    max-height: 16px;
    max-width: 16px;
    min-height: 16px;
    min-width: 16px;
    width: 16px;
  }
  &.is-medium {
    height: 24px;
    max-height: 24px;
    max-width: 24px;
    min-height: 24px;
    min-width: 24px;
    width: 24px;
  }
  &.is-large {
    height: 32px;
    max-height: 32px;
    max-width: 32px;
    min-height: 32px;
    min-width: 32px;
    width: 32px;
  }
}

/* Border */
@mixin border-radius( $radius: 3px ) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}

@mixin border-radius-specific( $tl-radius: 3px, $tr-radius: 3px, $bl-radius: 3px, $br-radius: 3px ) {
  $args: $tl-radius $tr-radius $bl-radius $br-radius;
  -webkit-border-radius: $args;
  -moz-border-radius: $args;
  border-radius: $args;
}

/* Components */
@mixin panel-heading($add-shadow: false, $add-radius: false) {
  &__heading {
    display: flex;
    border-color: rgba($panel-border-color, 0.2);
    border-top: 1px solid rgba($panel-border-color, 0.055);
    border-bottom: 1px solid rgba($panel-border-color, 0.125);
    cursor: pointer;
    margin-bottom: 0;
    padding: 8px 12px 8px 12px;
    @if $add-radius == true {
      border-radius: $panel-border-top-left-radius $panel-border-top-right-radius 0 0;
    }
    @if $add-shadow == true {
      @include light-shadow($black);
    }
    &__text{
      flex-grow: 1;
    }
    &.icon-left {
      .icon {
        margin-right: 0.5rem;
      }
    }
  }
}

@mixin btn-shadow {
  -webkit-box-shadow: 0em -0.3rem 0em rgba(0, 0, 0, 0.1) inset;
  -moz-box-shadow: 0em -0.3rem 0em rgba(0, 0, 0, 0.1) inset;
  box-shadow: 0em -0.3rem 0em rgba(0, 0, 0, 0.1) inset;
}

@mixin btn-flat-shadow {
  -webkit-box-shadow: 0em -0.1rem 0em rgba(0, 0, 0, 0.07) inset;
  -moz-box-shadow: 0em -0.1rem 0em  rgba(0, 0, 0, 0.07) inset;
  box-shadow: 0em -0.1rem 0em  rgba(0, 0, 0, 0.07) inset;
}

@mixin notification-shadow {
  -webkit-box-shadow: 0 3px 1px -2px rgba(50, 50, 50, 0.1), 0 2px 2px 0 rgba(50, 50, 50, 0.14), 0 1px 5px 0 rgba(50, 50, 50, 0.1), 0em -0.3rem 0em rgba(50, 50, 50, 0.1) inset;
  -moz-box-shadow: 0 3px 1px -2px rgba(50, 50, 50, 0.1), 0 2px 2px 0 rgba(50, 50, 50, 0.14), 0 1px 5px 0 rgba(50, 50, 50, 0.1), 0em -0.3rem 0em rgba(50, 50, 50, 0.1) inset;
  box-shadow: 0 3px 1px -2px rgba(50, 50, 50, 0.1), 0 2px 2px 0 rgba(50, 50, 50, 0.14), 0 1px 5px 0 rgba(50, 50, 50, 0.1), 0em -0.3rem 0em rgba(50, 50, 50, 0.1) inset;
}

@mixin toast-shadow {
  -webkit-box-shadow: 1px 7px 14px -5px rgba(50,50,50,0.2), 0em -0.3rem 0em rgba(50, 50, 50, 0.1) inset;
  -moz-box-shadow: 1px 7px 14px -5px rgba(50,50,50,0.2), 0em -0.3rem 0em rgba(50, 50, 50, 0.1) inset;
  box-shadow: 1px 7px 14px -5px rgba(50,50,50,0.2), 0em -0.3rem 0em rgba(50, 50, 50, 0.1) inset;
}

/* Shadow */
@mixin elevation($depth) {
  @if $depth < 1 {
    box-shadow: none;
  } @else if $depth > 7 {
    @warn "Invalid $depth `#{$depth}` for mixin `card`.";
  } @else {
    box-shadow: bottom-shadow($depth), top-shadow($depth);
  }
}

@mixin material-shadow($color) {
  box-shadow: 0 3px 1px -2px rgba($color, 0.2), 0 2px 2px 0 rgba($color, 0.14), 0 1px 5px 0 rgba($color, 0.12);
}

@mixin material-shadow-strong($color) {
  box-shadow: 0px 5px 5px -3px rgba($color, 0.2), 0px 8px 10px 1px rgba($color, 0.14), 0px 3px 14px 2px rgba($color, 0.12);
}

@mixin light-shadow($color) {
  box-shadow: 0 0px 1px 0px rgba($color, 0.1), 0 1px 1px 0px rgba($color, 0.14), 0 3px 3px 0 rgba($color, 0.12);
}

@mixin icon-shadow($color) {
  text-shadow: 0px 2px 2px rgba($color ,0.5), 2px 2px 2px rgba($color ,0.07), -2px 2px 5px rgba($color ,0.07);
}


@mixin box-shadow( $h-shadow: 0px, $v-shadow: 1px, $blur: 2px, $spread: 0px, $color: lighten($black, 40%) ) {
  $args: $h-shadow $v-shadow $blur $spread $color;
  -webkit-box-shadow: $args;
  -moz-box-shadow: $args;
  box-shadow: $args;
}

@mixin inner-box-shadow( $h-shadow: 0px, $v-shadow: 1px, $blur: 2px, $spread: 0px, $color: lighten($black, 40%) ) {
  $args: $h-shadow $v-shadow $blur $spread $color;
  -webkit-box-shadow: inset $args;
  -moz-box-shadow: inset $args;
  box-shadow: inset $args;
}

@mixin box-shadow-none() {
  -webkit-box-shadow: none;
  -moz-box-shadow: none;
  box-shadow: none;
}

/* Transitions and Animation */
@mixin transitions( $property: all, $duration: 0.3s, $timing: linear, $delay: 0s ) {
  $args: $property $duration $timing $delay;
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

@mixin animation( $animation_name, $duration: 1s, $timing_function: ease ) {
  -webkit-animation: $animation_name $duration $timing_function;
  -moz-animation: $animation_name $duration $timing_function;
  -o-animation: $animation_name $duration $timing_function;
  animation: $animation_name $duration $timing_function;
}

/* Other */
@mixin box-size( $property: border-box ) {
  -webkti-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

@mixin font-smoothing() {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
